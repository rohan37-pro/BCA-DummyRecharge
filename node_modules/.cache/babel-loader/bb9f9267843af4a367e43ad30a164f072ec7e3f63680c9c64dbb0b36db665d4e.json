{"ast":null,"code":"var _jsxFileName = \"/home/rohan/Desktop/projects/BCA-DummyRecharge/src/signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, EventHandler } from \"react\";\nimport \"./signup.css\";\nimport { Button, TextField } from '@mui/material';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { store } from \"./store.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [email, setemail] = useState('');\n  const [password, setpassword] = useState('');\n  const [conPassword, setconPassword] = useState('');\n  const [errormessage, seterrormessage] = useState(store.getState());\n  store.subscribe(() => seterrormessage(store.getState()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"h1-header\",\n          children: \"Signup Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"person-logo\",\n          children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: event => setemail(event.target.value),\n          className: \"email-input\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"standard\",\n          label: \"E-mail\",\n          placeholder: \"Enter Your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: event => setpassword(event.target.value),\n          className: \"email-input\",\n          type: \"password\",\n          fullWidth: true,\n          variant: \"standard\",\n          label: \"Password\",\n          placeholder: \"Enter password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: event => setconPassword(event.target.value),\n          className: \"email-input\",\n          type: \"password\",\n          fullWidth: true,\n          variant: \"standard\",\n          label: \"Confirm Password\",\n          placeholder: \"Enter password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-massage-container\",\n            children: [1].map(() => errormessage[\"account-create\"] === false ? /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"signup-Error-message\",\n              children: errormessage[\"reason\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 84\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => createAccount(email, password, conPassword),\n            className: \"send-otp-button\",\n            children: \" signup \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(SignUp, \"Ma2lxmWnx5+FuPUlXCHKnqPYtzI=\");\n_c = SignUp;\nfunction createAccount(email, password, conPassword) {\n  if (password === \"\") {\n    let errorMessage3 = {\n      \"account-create\": false,\n      \"reason\": \"Password must not be empty !!!\"\n    };\n    store.dispatch({\n      type: \"settextfromDB\",\n      payload: errorMessage3\n    });\n    return false;\n  }\n  if (conPassword === \"\") {\n    let errorMessage5 = {\n      \"account-create\": false,\n      \"reason\": \"Confirm password field empty !!!\"\n    };\n    store.dispatch({\n      type: \"settextfromDB\",\n      payload: errorMessage5\n    });\n    return false;\n  }\n  if (conPassword !== password) {\n    let errorMessage5 = {\n      \"account-create\": false,\n      \"reason\": \"confirm password not matched !!!\"\n    };\n    store.dispatch({\n      type: \"settextfromDB\",\n      payload: errorMessage5\n    });\n    return false;\n  }\n  let email_validation = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email);\n  if (email_validation === false) {\n    let errorMessage6 = {\n      \"account-create\": false,\n      \"reason\": \"Invalid email ID !!!\"\n    };\n    store.dispatch({\n      type: \"settextfromDB\",\n      payload: errorMessage6\n    });\n    return false;\n  }\n  const data = `/api/create-account/`;\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      \"Access-Control-Allow-Origin\": \"true\",\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"email\": email,\n      \"passwd\": password\n    })\n  };\n  let dataFromDb;\n  fetch(data, requestOptions).then(response => response.json()).then(_data_ => console.log(_data_));\n  // console.log(\"data from db \", dataFromDb)\n  return true;\n}\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","EventHandler","Button","TextField","AccountCircleIcon","store","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUp","_s","email","setemail","password","setpassword","conPassword","setconPassword","errormessage","seterrormessage","getState","subscribe","className","children","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","onChange","event","target","value","type","fullWidth","variant","label","placeholder","map","onClick","createAccount","_c","errorMessage3","dispatch","payload","errorMessage5","email_validation","test","errorMessage6","data","requestOptions","method","headers","Accept","body","JSON","stringify","dataFromDb","fetch","then","response","json","_data_","console","log","$RefreshReg$"],"sources":["/home/rohan/Desktop/projects/BCA-DummyRecharge/src/signup.js"],"sourcesContent":["import React, { useState,EventHandler } from \"react\";\nimport \"./signup.css\"\nimport {Button, TextField} from '@mui/material';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport {store} from \"./store.js\"\n\n\nconst SignUp = () => {\n    const [email, setemail] = useState('')\n    const [password, setpassword] = useState('')\n    const [conPassword, setconPassword] = useState('')\n    const [errormessage, seterrormessage] = useState(store.getState())\n    store.subscribe(()=> seterrormessage(store.getState()))\n\n    return (\n        <div className=\"signup-page\">\n            <div className=\"box-container\">\n                <div className=\"header-container\"> <h1 className=\"h1-header\">Signup Page</h1></div>\n\n\n\n                <div className=\"form-container\">\n                    <div className=\"person-logo\"><AccountCircleIcon fontSize=\"large\" /></div>\n                        <TextField onChange={ (event)=> setemail(event.target.value) } className=\"email-input\" type=\"text\" fullWidth variant='standard' label = 'E-mail'  placeholder='Enter Your email' />\n                        <TextField  onChange={ (event)=> setpassword(event.target.value) } className=\"email-input\" type=\"password\" fullWidth variant='standard' label = 'Password'  placeholder='Enter password' />\n                        <TextField onChange={ (event)=> setconPassword(event.target.value) } className=\"email-input\" type=\"password\" fullWidth variant='standard' label = 'Confirm Password'  placeholder='Enter password' />\n                    <div className=\"Button-container\">\n\n                        <div className=\"error-massage-container\">\n                        { [1].map( ()=> errormessage[\"account-create\"]===false ? ( <h1 className='signup-Error-message'>{errormessage[\"reason\"]}</h1> ) : (<></>)) }\n                        </div>\n\n                        <button onClick={()=> createAccount(email, password, conPassword)} className=\"send-otp-button\"> signup </button>\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n    )\n}\n\nfunction createAccount(email, password, conPassword){\n    if (password===\"\"){\n        let errorMessage3 = {\"account-create\":false, \"reason\": \"Password must not be empty !!!\"}\n     store.dispatch({type:\"settextfromDB\", payload : errorMessage3 })\n        return false\n    }\n    if (conPassword===\"\"){\n        let errorMessage5 = {\"account-create\":false, \"reason\": \"Confirm password field empty !!!\"}\n     store.dispatch({type:\"settextfromDB\", payload : errorMessage5 })\n        return false\n    }\n    if (conPassword!== password){\n        let errorMessage5 = {\"account-create\":false, \"reason\": \"confirm password not matched !!!\"}\n     store.dispatch({type:\"settextfromDB\", payload : errorMessage5 })\n        return false\n    }\n    let email_validation = ( /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email))\n    if ( email_validation === false ){\n    let errorMessage6 = {\"account-create\":false, \"reason\": \"Invalid email ID !!!\"}\n store.dispatch({type:\"settextfromDB\", payload : errorMessage6 })\n    return false\n}\n    \n    \n \n    const data = `/api/create-account/`\n    const requestOptions = {\n        method: 'POST',\n        headers: {\"Access-Control-Allow-Origin\": \"true\", 'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS', Accept: 'application/json', 'Content-Type': 'application/json' },\n        body: JSON.stringify({  \"email\": email, \"passwd\": password })\n    };\n\n    let dataFromDb\n    fetch(data, requestOptions).then((response) => response.json()).then((_data_) => console.log(_data_) )\n    // console.log(\"data from db \", dataFromDb)\n    return true;\n}\n\n\n\nexport default SignUp"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}