{"ast":null,"code":"var _jsxFileName = \"/home/rohan/Desktop/projects/BCA-DummyRecharge/src/signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, EventHandler } from \"react\";\nimport \"./signup.css\";\nimport { Button, TextField } from '@mui/material';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [email, setemail] = useState('');\n  const [password, setpassword] = useState('');\n  const [conPassword, setconPassword] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"h1-header\",\n          children: \"Signup Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"person-logo\",\n          children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: event => setemail(event.target.value),\n          className: \"email-input\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"standard\",\n          label: \"E-mail\",\n          placeholder: \"Enter Your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: event => setpassword(event.target.value),\n          className: \"email-input\",\n          type: \"password\",\n          fullWidth: true,\n          variant: \"standard\",\n          label: \"Password\",\n          placeholder: \"Enter password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: event => setconPassword(event.target.value),\n          className: \"email-input\",\n          type: \"password\",\n          fullWidth: true,\n          variant: \"standard\",\n          label: \"Confirm Password\",\n          placeholder: \"Enter password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => createAccount(email, password, conPassword),\n            className: \"send-otp-button\",\n            children: \" signup \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(SignUp, \"lmc3vIKol5tFCr87lqja5JljlUM=\");\n_c = SignUp;\nfunction createAccount(email, password, conPassword) {\n  if (passwd === \"\") {\n    let errorMessage3 = {\n      \"account-create\": false,\n      \"reason\": \"Password must not be empty !!!\"\n    };\n    userstore.dispatch({\n      type: \"addsignupDataFromDb\",\n      payload: {\n        \"dataFromDb\": errorMessage3\n      }\n    });\n    return false;\n  }\n  if (String(phoneNumber).length !== 10) {\n    let errorMessage4 = {\n      \"account-create\": false,\n      \"reason\": \"Invalid Phone Number !!!\"\n    };\n    userstore.dispatch({\n      type: \"addsignupDataFromDb\",\n      payload: {\n        \"dataFromDb\": errorMessage4\n      }\n    });\n    return false;\n  }\n  let email_validation = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email);\n  if (email_validation === false) {\n    let errorMessage5 = {\n      \"account-create\": false,\n      \"reason\": \"Invalid email ID !!!\"\n    };\n    userstore.dispatch({\n      type: \"addsignupDataFromDb\",\n      payload: {\n        \"dataFromDb\": errorMessage5\n      }\n    });\n    return false;\n  }\n  const id__ = iWonderHow();\n  const data = `/api/create-account/${id__}`;\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      \"Access-Control-Allow-Origin\": \"true\",\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"username\": username,\n      \"phonenumber\": phoneNumber,\n      \"email\": email,\n      \"passwd\": passwd\n    })\n  };\n  let dataFromDb;\n  fetch(data, requestOptions).then(response => response.json()).then(_data_ => {\n    dataFromDb = _data_;\n    userstore.dispatch({\n      type: \"addsignupDataFromDb\",\n      payload: {\n        \"dataFromDb\": dataFromDb\n      }\n    });\n  }).then(() => addcookies(username, phoneNumber, email));\n  // console.log(\"data from db \", dataFromDb)\n  return true;\n}\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","EventHandler","Button","TextField","AccountCircleIcon","jsxDEV","_jsxDEV","SignUp","_s","email","setemail","password","setpassword","conPassword","setconPassword","className","children","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","onChange","event","target","value","type","fullWidth","variant","label","placeholder","onClick","createAccount","_c","passwd","errorMessage3","userstore","dispatch","payload","String","phoneNumber","length","errorMessage4","email_validation","test","errorMessage5","id__","iWonderHow","data","requestOptions","method","headers","Accept","body","JSON","stringify","username","dataFromDb","fetch","then","response","json","_data_","addcookies","$RefreshReg$"],"sources":["/home/rohan/Desktop/projects/BCA-DummyRecharge/src/signup.js"],"sourcesContent":["import React, { useState,EventHandler } from \"react\";\nimport \"./signup.css\"\nimport {Button, TextField} from '@mui/material';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nconst SignUp = () => {\n    const [email, setemail] = useState('')\n    const [password, setpassword] = useState('')\n    const [conPassword, setconPassword] = useState('')\n\n\n    return (\n        <div className=\"signup-page\">\n            <div className=\"box-container\">\n                <div className=\"header-container\"> <h1 className=\"h1-header\">Signup Page</h1></div>\n\n\n\n                <div className=\"form-container\">\n                    <div className=\"person-logo\"><AccountCircleIcon fontSize=\"large\" /></div>\n                        <TextField onChange={ (event)=> setemail(event.target.value) } className=\"email-input\" type=\"text\" fullWidth variant='standard' label = 'E-mail'  placeholder='Enter Your email' />\n                        <TextField  onChange={ (event)=> setpassword(event.target.value) } className=\"email-input\" type=\"password\" fullWidth variant='standard' label = 'Password'  placeholder='Enter password' />\n                        <TextField onChange={ (event)=> setconPassword(event.target.value) } className=\"email-input\" type=\"password\" fullWidth variant='standard' label = 'Confirm Password'  placeholder='Enter password' />\n                    <div className=\"Button-container\">\n                        <button onClick={()=> createAccount(email, password, conPassword)} className=\"send-otp-button\"> signup </button>\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n    )\n}\n\nfunction createAccount(email, password, conPassword){\n    if (passwd===\"\"){\n        let errorMessage3 = {\"account-create\":false, \"reason\": \"Password must not be empty !!!\"}\n        userstore.dispatch({type:\"addsignupDataFromDb\", payload : {\"dataFromDb\" : errorMessage3} })\n        return false\n    }\n    if (String(phoneNumber).length !== 10){\n        let errorMessage4 = {\"account-create\":false, \"reason\": \"Invalid Phone Number !!!\"}\n        userstore.dispatch({type:\"addsignupDataFromDb\", payload : {\"dataFromDb\" : errorMessage4} })\n        return false\n    }\n    let email_validation = ( /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email))\n    if ( email_validation === false ){\n    let errorMessage5 = {\"account-create\":false, \"reason\": \"Invalid email ID !!!\"}\n    userstore.dispatch({type:\"addsignupDataFromDb\", payload : {\"dataFromDb\" : errorMessage5} })\n    return false\n}\n    \n    \n    const id__ = iWonderHow()\n    const data = `/api/create-account/${id__}`\n    const requestOptions = {\n        method: 'POST',\n        headers: {\"Access-Control-Allow-Origin\": \"true\", 'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS', Accept: 'application/json', 'Content-Type': 'application/json' },\n        body: JSON.stringify({ \"username\": username, \"phonenumber\": phoneNumber, \"email\": email, \"passwd\": passwd })\n    };\n\n    let dataFromDb\n    fetch(data, requestOptions).then((response) => response.json()).then((_data_) => {dataFromDb = _data_; userstore.dispatch({type:\"addsignupDataFromDb\", payload : {\"dataFromDb\" : dataFromDb} }) }).then(() => addcookies(username,phoneNumber,email) )\n    // console.log(\"data from db \", dataFromDb)\n    return true;\n}\n\n\n\nexport default SignUp"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}